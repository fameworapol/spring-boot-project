package com.example.EP1Springboot.config;

import com.example.EP1Springboot.config.token.TokenFilterConfiguerer;
import com.example.EP1Springboot.service.TokenService;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {
    private final TokenService tokenService;

    public SecurityConfig(TokenService tokenService) {
        this.tokenService = tokenService;
    }

    //üò°‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ dependency security ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á API ‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    //‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏°‡∏µ API ‡πÑ‡∏´‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÑ‡∏î‡πâ‡∏ö‡πâ‡∏≤‡∏á? ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà login,register ‡∏ô‡∏≠‡∏Å‡∏ô‡∏±‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ login ‡∏Å‡πà‡∏≠‡∏ô
    @Bean
    public PasswordEncoder passwordEncoder(){
        return new BCryptPasswordEncoder(); //‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ password
    }
    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        return http.cors().disable().csrf().disable()
                .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS) //backend ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô stateless
                .and().authorizeHttpRequests().requestMatchers("/user/register","/user/login","/user/").anonymous()//‡∏ñ‡πâ‡∏≤ request ‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô ‡πÅ‡∏•‡∏∞‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏à‡∏∞‡πÄ‡∏ä‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢
                .anyRequest().authenticated() //‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô API ‡∏≠‡∏∑‡πà‡∏ô‡πÜ‡∏ï‡πâ‡∏≠‡∏á login ‡∏Å‡πà‡∏≠‡∏ô
                .and().apply(new TokenFilterConfiguerer(tokenService))
                .and().build();//‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ Token filter
    }
}

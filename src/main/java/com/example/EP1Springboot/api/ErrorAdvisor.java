package com.example.EP1Springboot.api;

import com.example.EP1Springboot.exception.BaseException;
import lombok.Data;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;

import java.time.LocalDateTime;

@ControllerAdvice
public class ErrorAdvisor {
    //üçé‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Error => ‡∏Ñ‡∏∑‡∏≠‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î Error ‡∏Ç‡∏∂‡πâ‡∏ô‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£
    @ExceptionHandler(BaseException.class) //‡∏à‡∏∞‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ Error ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ BaseException ‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤
    public ResponseEntity<ErrorResponse> handleBaseException(BaseException e){
        //‡∏ñ‡πâ‡∏≤‡∏°‡∏µ BaseException
        ErrorResponse response = new ErrorResponse(); //
        response.setError(e.getMessage()); //attribute error ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ message ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô error (error code)
        response.setStatus(HttpStatus.EXPECTATION_FAILED.value());
        return new ResponseEntity<>(response,HttpStatus.EXPECTATION_FAILED); //response ‡∏Ñ‡πà‡∏≤‡∏ï‡∏≤‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡πÉ‡∏ô ErrorResponse ‡πÑ‡∏õ‡∏¢‡∏±‡∏á client
    }

    //class ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÉ‡∏´‡πâ return Json ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á? ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î Error
    @Data
    public static class ErrorResponse{
        private LocalDateTime timeStamp = LocalDateTime.now();
        private int status;
        private String error;
    }
    /*
    üçéerror ‡∏ó‡∏µ‡πà‡∏ù‡∏±‡πà‡∏á client
    {
    "timeStamp": "2023-02-04T06:04:05.942019",
    "status": 417,
    "error": "user.register.email.null"
    }
    */
}
